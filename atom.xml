<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bi~Bi~Boom</title>
  <icon>https://bibiboom.top/images/logo.png</icon>
  
  <link href="https://bibiboom.top/atom.xml" rel="self"/>
  
  <link href="https://bibiboom.top/"/>
  <updated>2020-11-13T19:07:13.910Z</updated>
  <id>https://bibiboom.top/</id>
  
  <author>
    <name>Bi~Bi~Boom</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java 对象的浅复制和深复制</title>
    <link href="https://bibiboom.top/2020/11/13/java-object-copy/"/>
    <id>https://bibiboom.top/2020/11/13/java-object-copy/</id>
    <published>2020-11-13T15:56:37.000Z</published>
    <updated>2020-11-13T19:07:13.910Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="center">英文</th><th align="center">名称</th></tr></thead><tbody><tr><td align="center">Shallow copy</td><td align="center">浅拷贝</td></tr><tr><td align="center">Deep copy</td><td align="center">深拷贝</td></tr><tr><td align="center">Lazy copy</td><td align="center">延迟拷贝</td></tr></tbody></table><hr><a id="more"></a><h2 id="浅复制"><a href="#浅复制" class="headerlink" title="浅复制"></a>浅复制</h2><ul><li><p>原理</p></li><li><p>类图</p><img src="/2020/11/13/java-object-copy/UML%E6%B5%85%E5%A4%8D%E5%88%B6.png" class=""></li></ul><h3 id="wallet-java"><a href="#wallet-java" class="headerlink" title="wallet.java"></a>wallet.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> smallClass;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Wallet</span> </span>&#123;</span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">int</span> money;<span class="comment">//钱数</span></span><br><span class="line"> <span class="keyword">private</span> String rank;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 带初始余额的构造方法</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> money 初始余额</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">Wallet</span><span class="params">(<span class="keyword">int</span> money,String rank)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">  <span class="keyword">this</span>.setMoney(money);</span><br><span class="line">  <span class="keyword">this</span>.setRank(rank);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 设置钱包的余额</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> money 钱包的余额</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> 设置余额是否成功</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMoney</span><span class="params">(<span class="keyword">int</span> money)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.money=money;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 设置钱包的称号</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> rank 钱包的称号</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRank</span><span class="params">(String rank)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.rank=rank;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取钱包的余额</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> 钱包的余额</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMoney</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> money;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取钱包称号</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> rank 钱包的称号</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> String <span class="title">getRank</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">this</span>.rank;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Student-java"><a href="#Student-java" class="headerlink" title="Student.java"></a>Student.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> smallClass;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 学生类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Zanxin</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Cloneable</span> </span>&#123;</span><br><span class="line"> <span class="keyword">private</span> String name;</span><br><span class="line"> <span class="keyword">private</span> Wallet wallet;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name,<span class="keyword">int</span> money,String rank)</span> </span>&#123;</span><br><span class="line">  setName(name);</span><br><span class="line">  wallet=<span class="keyword">new</span> Wallet(money,rank);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取学生姓名</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> name 学生姓名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取钱包余额</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> Wallet.money 钱包的余额</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMoney</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> wallet.getMoney();</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取钱包称号</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> Wallet.rank 钱包的称号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> String <span class="title">getWalletRank</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">this</span>.wallet.getRank();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 设置姓名</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> name 学生姓名</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">this</span>.name=name;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 设置钱包余额</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> money 钱包余额</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWalletMoney</span><span class="params">(<span class="keyword">int</span> money)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.wallet.setMoney(money);</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 设置钱包称号</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> rank 钱包的称号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWalletRank</span><span class="params">(String rank)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.wallet.setRank(rank);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> Object <span class="title">clone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">  <span class="keyword">try</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">super</span>.clone();</span><br><span class="line">  &#125;<span class="keyword">catch</span>(CloneNotSupportedException e) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="console-java"><a href="#console-java" class="headerlink" title="console.java"></a>console.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> smallClass;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Console</span> </span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  Student stu=<span class="keyword">new</span> Student(<span class="string">&quot;维多利亚&quot;</span>, <span class="number">50</span>,<span class="string">&quot;菜鸟&quot;</span>);</span><br><span class="line">  Student stu2=(Student) stu.clone();</span><br><span class="line">  </span><br><span class="line">  System.out.println(stu.getName()+stu.getMoney()+stu.getWalletRank());</span><br><span class="line">  System.out.println(stu2.getName()+stu2.getMoney()+stu2.getWalletRank());</span><br><span class="line">  </span><br><span class="line">  stu2.setName(<span class="string">&quot;朱丽叶&quot;</span>);</span><br><span class="line">  stu2.setWalletMoney(<span class="number">20</span>);<span class="comment">//只是改了stu2 而stu却跟着一起变（这个money是money里面的，而整个wallet是共享的）</span></span><br><span class="line">  stu2.setWalletRank(<span class="string">&quot;青铜&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  System.out.println(<span class="string">&quot;----------------&quot;</span>);</span><br><span class="line">  System.out.println(<span class="string">&quot;修改后：&quot;</span>);</span><br><span class="line">  System.out.println(stu.getName()+stu.getMoney()+stu.getWalletRank());<span class="comment">//stu的wallet很无辜地被改变</span></span><br><span class="line">  System.out.println(stu2.getName()+stu2.getMoney()+stu2.getWalletRank());</span><br><span class="line">  System.out.println(<span class="string">&quot;----------------&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;英文&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;名称&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;Shallow copy&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;浅拷贝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;Deep copy&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;深拷贝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;Lazy copy&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;延迟拷贝&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;</summary>
    
    
    
    
    <category term="author: zanxinz" scheme="https://bibiboom.top/tags/author-zanxinz/"/>
    
    <category term="Java" scheme="https://bibiboom.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>遇见 JVM 的第一印象</title>
    <link href="https://bibiboom.top/2020/11/13/java-first/"/>
    <id>https://bibiboom.top/2020/11/13/java-first/</id>
    <published>2020-11-12T17:22:48.000Z</published>
    <updated>2020-11-13T15:58:39.671Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="center">术语</th><th align="center">全称</th><th align="center">中文</th></tr></thead><tbody><tr><td align="center">JDK</td><td align="center">Java Development Kit</td><td align="center">Java 开发工具包</td></tr><tr><td align="center">JRE</td><td align="center">Java Running Environment</td><td align="center">Java 运行环境</td></tr><tr><td align="center">JVM</td><td align="center">Java Virtual Machine</td><td align="center">Java 虚拟机器</td></tr><tr><td align="center">JSR</td><td align="center">Java Specification Requests</td><td align="center">Java 规范提案</td></tr></tbody></table><hr><a id="more"></a><h2 id="Java-具有跨平台特性（体现在-class-和-JVM-的关系中）"><a href="#Java-具有跨平台特性（体现在-class-和-JVM-的关系中）" class="headerlink" title="Java 具有跨平台特性（体现在 .class 和 JVM 的关系中）"></a>Java 具有跨平台特性（体现在 .class 和 JVM 的关系中）</h2><ul><li>真正在机器上运行的是二进制码。</li><li>本机的的编译器把源代码（程序员写的东西）翻译成二进制码。</li><li>以前的编译器（比如C、C++），编译之后的代码只能在同样的平台上运行（如 Windows 编译后的内容无法在 Linux 上使用）。这就是跨平台的问题。</li><li>Java 通过 JVM（JAVA Virtual Machine）解决跨平问题。</li><li>JVM 负责把 .java 格式文件编译成 .class 的文件。</li><li><strong>.class 是通用的</strong>。<ul><li>不管机器是哪个平台的（Window、Linux或是 MAC OS），只要机器中装有 JVM，JVM 就可以把 .class 翻译成适应本机的二进制代码，然后可以直接运行。这也正是 Java 的「编译一次，到处执行。」思想的所在。</li></ul></li><li>JDK（Java Development Kit） 包含了好几个工具。<ul><li>javac：编译器，把 .java 编译成 .class</li><li>java：运行工具，直接运行 .class 后缀的文件</li><li>jar：打包工具，把相关类文件打包成 jar 包</li><li>javadoc：文档生成工具，从源码中提取注释，注释需要符合规范</li><li>初学者常用的是上面这几个工具，后面还有十几个，这个留到学到的时候再做展开。</li></ul></li></ul><h2 id="Java-是一个标准"><a href="#Java-是一个标准" class="headerlink" title="Java 是一个标准"></a>Java 是一个标准</h2><ul><li>像System、out、println这些名称，都是标准中所规范的名称。前人依据 JSR 标准文件，写出了一套标准的程序库（如 Java SE API 里面就包含各种标准API，以 .class 的形式）。</li><li>需要有人写出 System.java 编译后为 System.class，第一个程序里面写这样，我才能使用 System类（class）里面的 out 对象（object）的 print 方法（Method）。</li><li>而 JRE（Java Running Environment）就包含了 Java SE API 和 JVM 。<ul><li>运行编译好的文件（.class），只需要 JRE ，因为自己写的程序里面调用了Java SE API里的方法。而如果要自己编写源程序并且进行编译（需要用到javac），则只需要 JDK。</li></ul></li></ul><hr>]]></content>
    
    
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;术语&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;全称&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;中文&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;JDK&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Java Development Kit&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Java 开发工具包&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;JRE&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Java Running Environment&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Java 运行环境&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;JVM&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Java Virtual Machine&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Java 虚拟机器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;JSR&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Java Specification Requests&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Java 规范提案&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="Java" scheme="https://bibiboom.top/categories/Java/"/>
    
    
    <category term="author: zanxinz" scheme="https://bibiboom.top/tags/author-zanxinz/"/>
    
    <category term="Java" scheme="https://bibiboom.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>iOS 检测第一次 / 新版本第一次进入 App</title>
    <link href="https://bibiboom.top/2020/11/09/detect-first-enter-in-ios/"/>
    <id>https://bibiboom.top/2020/11/09/detect-first-enter-in-ios/</id>
    <published>2020-11-09T02:21:55.000Z</published>
    <updated>2020-11-12T17:11:39.512Z</updated>
    
    <content type="html"><![CDATA[<p>项目中经常需要检测应用是否第一次打开，判断是否需要新手引导，将检测代码写在另一个 class 的静态方法中，再在需要的页面或 AppDelegate 中调用。</p><a id="more"></a><p>Swift:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检测第一次打开</span></span><br><span class="line"><span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">isFirstLaunch</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> isFirstLaunch = !<span class="type">UserDefaults</span>.standard.bool(forKey: <span class="string">&quot;hasBeenLaunched&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> isFirstLaunch</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">UserDefaults</span>.standard.<span class="keyword">set</span>(<span class="literal">true</span>, forKey: <span class="string">&quot;hasBeenLaunched&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isFirstLaunch</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检测第一次打开 / 新版本第一次打开</span></span><br><span class="line"><span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">isFirstLaunchOfNewVersion</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> defaults = <span class="type">UserDefaults</span>.standard;</span><br><span class="line">    <span class="keyword">let</span> currentVersion = <span class="type">Bundle</span>.main.infoDictionary![<span class="string">&quot;CFBundleShortVersionString&quot;</span>] <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">    <span class="keyword">let</span> lastLaunchVersion = defaults.string(forKey: <span class="string">&quot;lastLaunchVersion&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> (!lastLaunchVersion) &#123;</span><br><span class="line">        <span class="comment">// 第一次打开</span></span><br><span class="line">        defaults.<span class="keyword">set</span>(currentVersion, forKey: <span class="string">&quot;lastLaunchVersion&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (lastLaunchVersion != currentVersion) &#123;</span><br><span class="line">        <span class="comment">// 版本更新第一次打开</span></span><br><span class="line">        defaults.<span class="keyword">set</span>(currentVersion, forKey: <span class="string">&quot;lastLaunchVersion&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检测某个页面是否第一次打开 / 新版本第一次打开（需要传递 classname）</span></span><br><span class="line"><span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">isFirstLaunchOfNewVersion</span><span class="params">(inClassName name: String)</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> defaults = <span class="type">UserDefaults</span>.standard;</span><br><span class="line">    <span class="keyword">let</span> currentVersion = <span class="type">Bundle</span>.main.infoDictionary![<span class="string">&quot;CFBundleShortVersionString&quot;</span>] <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">    <span class="keyword">let</span> lastLaunchVersion = defaults.string(forKey: <span class="string">&quot;lastLaunchVersion_&quot;</span> + name)</span><br><span class="line">    <span class="keyword">if</span> (!lastLaunchVersion) &#123;</span><br><span class="line">        <span class="comment">// 第一次打开</span></span><br><span class="line">        defaults.<span class="keyword">set</span>(currentVersion, forKey: <span class="string">&quot;lastLaunchVersion_&quot;</span> + name)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (lastLaunchVersion != currentVersion) &#123;</span><br><span class="line">        <span class="comment">// 版本更新第一次打开</span></span><br><span class="line">        defaults.<span class="keyword">set</span>(currentVersion, forKey: <span class="string">&quot;lastLaunchVersion_&quot;</span> + name)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于检测某个页面是否第一次打开只需在目标 ViewController 里加上</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (isFirstLaunchOfNewVersion(inClassName: <span class="type">String</span>(describing: <span class="keyword">self</span>.classForCoder))) &#123;</span><br><span class="line">    <span class="comment">// print(&quot;第一次打开，启动新手引导&quot;)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Objective-C:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">BOOL</span>) isFirstLaunch &#123;</span><br><span class="line">    <span class="built_in">BOOL</span> isFirstLaunch = ![[<span class="built_in">NSUserDefaults</span> standardUserDefaults] boolForKey:<span class="string">@&quot;hasBeenLaunched&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (isFirstLaunch) &#123;</span><br><span class="line">        [[<span class="built_in">NSUserDefaults</span> standardUserDefaults] setBool:<span class="literal">YES</span> forKey:<span class="string">@&quot;hasBeenLaunched&quot;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isFirstLaunch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">BOOL</span>) isFirstLaunchOfNewVersion &#123;</span><br><span class="line">    <span class="built_in">NSUserDefaults</span> *defaults = [<span class="built_in">NSUserDefaults</span> standardUserDefaults];</span><br><span class="line">    <span class="built_in">NSString</span> *currentVersion = [[[<span class="built_in">NSBundle</span> mainBundle] infoDictionary] objectForKey:<span class="string">@&quot;CFBundleShortVersionString&quot;</span>];</span><br><span class="line">    <span class="built_in">NSString</span> *lastLaunchVersion = [defaults objectForKey:<span class="string">@&quot;lastLaunchVersion&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (!lastLaunchVersion) &#123;</span><br><span class="line">        <span class="comment">// 第一次打开</span></span><br><span class="line">        [defaults setObject:currentVersion forKey:<span class="string">@&quot;lastLaunchVersion&quot;</span>];</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (![lastLaunchVersion isEqualToString:currentVersion]) &#123;</span><br><span class="line">        <span class="comment">// 版本更新第一次打开</span></span><br><span class="line">        [defaults setObject:currentVersion forKey:<span class="string">@&quot;lastLaunchVersion&quot;</span>];</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">BOOL</span>) isFirstLaunchOfNewVersionInClassName:(<span class="built_in">NSString</span> *)name &#123;</span><br><span class="line">    <span class="built_in">NSUserDefaults</span> *defaults = [<span class="built_in">NSUserDefaults</span> standardUserDefaults];</span><br><span class="line">    <span class="built_in">NSString</span> *currentVersion = [[[<span class="built_in">NSBundle</span> mainBundle] infoDictionary] objectForKey:<span class="string">@&quot;CFBundleShortVersionString&quot;</span>];</span><br><span class="line">    <span class="built_in">NSString</span> *lastLaunchVersion = [defaults objectForKey:[<span class="string">@&quot;lastLaunchVersion_&quot;</span> stringByAppendingString:name]];</span><br><span class="line">    <span class="keyword">if</span> (!lastLaunchVersion) &#123;</span><br><span class="line">        <span class="comment">// 第一次打开</span></span><br><span class="line">        [defaults setObject:currentVersion forKey:[<span class="string">@&quot;lastLaunchVersion_&quot;</span> stringByAppendingString:name]];</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (![lastLaunchVersion isEqualToString:currentVersion]) &#123;</span><br><span class="line">        <span class="comment">// 版本更新第一次打开</span></span><br><span class="line">        [defaults setObject:currentVersion forKey:[<span class="string">@&quot;lastLaunchVersion_&quot;</span> stringByAppendingString:name]];</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于检测某个页面是否第一次打开只需在目标 ViewController 里加上</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (isFirstLaunchOfNewVersionInClassName:<span class="built_in">NSStringFromClass</span>([<span class="keyword">self</span> <span class="keyword">class</span>])) &#123;</span><br><span class="line">    <span class="comment">// print(&quot;第一次打开，启动新手引导&quot;)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;项目中经常需要检测应用是否第一次打开，判断是否需要新手引导，将检测代码写在另一个 class 的静态方法中，再在需要的页面或 AppDelegate 中调用。&lt;/p&gt;</summary>
    
    
    
    <category term="iOS" scheme="https://bibiboom.top/categories/iOS/"/>
    
    <category term="实用" scheme="https://bibiboom.top/categories/iOS/%E5%AE%9E%E7%94%A8/"/>
    
    
    <category term="author: cloxnu" scheme="https://bibiboom.top/tags/author-cloxnu/"/>
    
    <category term="Swift" scheme="https://bibiboom.top/tags/Swift/"/>
    
    <category term="Objective-C" scheme="https://bibiboom.top/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>基于 Python 的 Kivy 开发：首次配置 kivy</title>
    <link href="https://bibiboom.top/2020/11/08/Kivy-Firstly-Set/"/>
    <id>https://bibiboom.top/2020/11/08/Kivy-Firstly-Set/</id>
    <published>2020-11-07T16:32:30.000Z</published>
    <updated>2020-11-12T17:30:29.005Z</updated>
    
    <content type="html"><![CDATA[<h2 id="kivy"><a href="#kivy" class="headerlink" title="kivy"></a>kivy</h2><ul><li>kivy 是一个基于 Python 的 App 开发框架，基于 kivy进行移动端的 APP 开发是一个不错的选择。</li><li>首先，演示一下在 win10 环境下配置 kivy。</li></ul><p>1.直接 <code>pip install kivy</code></p><ul><li>自己写个 main.py 作为测试</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> kivy.app <span class="keyword">import</span> App</span><br><span class="line"><span class="keyword">from</span> kivy.uix.label <span class="keyword">import</span> Label</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainApp</span>(<span class="params">App</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">build</span>(<span class="params">self</span>):</span></span><br><span class="line">        label = Label(text=<span class="string">&#x27;Hello from Kivy&#x27;</span>,</span><br><span class="line">                      size_hint=(<span class="number">.5</span>, <span class="number">.5</span>),</span><br><span class="line">                      pos_hint=&#123;<span class="string">&#x27;center_x&#x27;</span>: <span class="number">.5</span>, <span class="string">&#x27;center_y&#x27;</span>: <span class="number">.5</span>&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> label</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = MainApp()</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>如果遇到问题</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[CRITICAL] [App         ] Unable to get a Text provider, abort.</span><br></pre></td></tr></table></figure><p>则 terminal 执行下列语句（可能需要梯子）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgraade pip wheel setuptools</span><br><span class="line">pip install docutils pygments pypiwin32 kivy.deps.sdl2 kivy.deps.glew</span><br><span class="line">pip install kivy.deps.gstreamer</span><br><span class="line">pip install kivy.deps.angle</span><br><span class="line">pip install --upgrade kivy</span><br></pre></td></tr></table></figure><p>2.运行之后可以看见下图，说明成功</p><img src="/2020/11/08/Kivy-Firstly-Set/kivySuccess.png" class="">]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;kivy&quot;&gt;&lt;a href=&quot;#kivy&quot; class=&quot;headerlink&quot; title=&quot;kivy&quot;&gt;&lt;/a&gt;kivy&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;kivy 是一个基于 Python 的 App 开发框架，基于 kivy进行移动端的 APP 开发是一个不错的选择。&lt;/li&gt;
&lt;li&gt;首先，演示一下在 win10 环境下配置 kivy。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1.直接 &lt;code&gt;pip install kivy&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自己写个 main.py 作为测试&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; kivy.app &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; App&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; kivy.uix.label &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Label&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainApp&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;App&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;build&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;self&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        label = Label(text=&lt;span class=&quot;string&quot;&gt;&amp;#x27;Hello from Kivy&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      size_hint=(&lt;span class=&quot;number&quot;&gt;.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;.5&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      pos_hint=&amp;#123;&lt;span class=&quot;string&quot;&gt;&amp;#x27;center_x&amp;#x27;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;.5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;center_y&amp;#x27;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;.5&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; label&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app = MainApp()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app.run()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Kivy" scheme="https://bibiboom.top/categories/Kivy/"/>
    
    
    <category term="author: zanxinz" scheme="https://bibiboom.top/tags/author-zanxinz/"/>
    
    <category term="Python" scheme="https://bibiboom.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Get Start</title>
    <link href="https://bibiboom.top/2020/11/06/get-start/"/>
    <id>https://bibiboom.top/2020/11/06/get-start/</id>
    <published>2020-11-06T02:48:31.000Z</published>
    <updated>2020-11-13T15:31:02.397Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>请确保本机已安装 npm，<a href="https://www.npmjs.com/get-npm">官方链接</a></p><p>请确保已经 clone 这个 repo，<a href="https://github.com/bi-bi-boom/ERROR_LOG">GitHub 链接</a></p><p>请确保本机已安装 hexo，<a href="https://hexo.io/zh-cn/">官方链接</a></p><p>在根目录下运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><p>hexo 的规则参考 <a href="https://hexo.io/zh-cn/docs/writing">官网 doc</a></p><p>发布时，运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>来生成 public/ 目录；</p><p>运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>上传到 GitHub。</p><blockquote><p>关于文字排版参考 <a href="https://github.com/xitu/gold-miner/wiki/%E8%AF%91%E6%96%87%E6%8E%92%E7%89%88%E8%A7%84%E5%88%99%E6%8C%87%E5%8C%97">这篇文章</a></p></blockquote><h2 id="github-发布时权限问题"><a href="#github-发布时权限问题" class="headerlink" title="github 发布时权限问题"></a>github 发布时权限问题</h2><ul><li>hexo 发布 （deploy）之前需要先 在 git 里获得添加ssh</li><li>按下 Win 键寻找并且运行 Git Bash。没有的话百度或者 Google 下载一下，搜索 “git 下载”。</li><li>那一步 hexo d 如果最后没有成功，很可能是没有 git 权限。<ul><li>解决办法：配置关于自己 github 的 ssh。</li><li>.</li><li>.</li><li>.</li><li>.</li><li>.</li><li>.</li></ul></li><li>ssh 配置完成后重新 hexo d，就可以把本地的生成的内容发布到远端。</li></ul><h2 id="隔一段时间之后"><a href="#隔一段时间之后" class="headerlink" title="隔一段时间之后"></a>隔一段时间之后</h2><ul><li><p>本地的ssh很可能需要再次添加到本地客户端（不需要 github 再去生成 ssh 秘钥）下面是解决办法</p><ul><li>两句话：</li><li><blockquote><p>eval $(ssh-agent -s)</p></blockquote></li><li><blockquote><p>ssh-add ~/.ssh/zzxssh</p></blockquote></li></ul></li><li><p>其中这个 zzxssh是我命名的 ssh 许可文件</p></li><li><p>可以使用 ls -al ~/.ssh  先查看 ssh 文件有哪些</p></li></ul><table><thead><tr><th align="center">指令</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">hexo g</td><td align="center">本地生成静态html</td></tr><tr><td align="center">hexo d</td><td align="center">本地工程发布到远端</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Installation&quot;&gt;&lt;a href=&quot;#Installation&quot; class=&quot;headerlink&quot; title=&quot;Installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;&lt;p&gt;请确保本机已安装 npm，&lt;a href=&quot;https://www.npmjs.com/get-npm&quot;&gt;官方链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;请确保已经 clone 这个 repo，&lt;a href=&quot;https://github.com/bi-bi-boom/ERROR_LOG&quot;&gt;GitHub 链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;请确保本机已安装 hexo，&lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;官方链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在根目录下运行&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="blog" scheme="https://bibiboom.top/categories/blog/"/>
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://bibiboom.top/2020/11/05/test/"/>
    <id>https://bibiboom.top/2020/11/05/test/</id>
    <published>2020-11-05T14:40:48.000Z</published>
    <updated>2020-11-07T14:39:23.153Z</updated>
    
    <content type="html"><![CDATA[<h1 id="标题-1"><a href="#标题-1" class="headerlink" title="标题 1"></a>标题 1</h1><h2 id="标题-2"><a href="#标题-2" class="headerlink" title="标题 2"></a>标题 2</h2><h3 id="标题-3"><a href="#标题-3" class="headerlink" title="标题 3"></a>标题 3</h3><h4 id="标题-4"><a href="#标题-4" class="headerlink" title="标题 4"></a>标题 4</h4><h5 id="标题-5"><a href="#标题-5" class="headerlink" title="标题 5"></a>标题 5</h5><h6 id="标题-6"><a href="#标题-6" class="headerlink" title="标题 6"></a>标题 6</h6><p>嗨，这里是中文测试。</p><p>Hey, there is english test.</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code test</span><br></pre></td></tr></table></figure><p>javascript 代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">6</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;Hello world&quot;</span>); <span class="comment">// 中文注释</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The <code>code</code> block looks good.</p><blockquote><p>quote block<br>引用块</p></blockquote><p><em>The</em> Bi-Bi-Boom <em>is</em> a <strong>team</strong> dedicated to <strong>BOOM</strong>. <del>line</del></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;标题-1&quot;&gt;&lt;a href=&quot;#标题-1&quot; class=&quot;headerlink&quot; title=&quot;标题 1&quot;&gt;&lt;/a&gt;标题 1&lt;/h1&gt;&lt;h2 id=&quot;标题-2&quot;&gt;&lt;a href=&quot;#标题-2&quot; class=&quot;headerlink&quot; title=&quot;标题 2&quot;&gt;&lt;/a&gt;标题 2&lt;/h2&gt;&lt;h3 id=&quot;标题-3&quot;&gt;&lt;a href=&quot;#标题-3&quot; class=&quot;headerlink&quot; title=&quot;标题 3&quot;&gt;&lt;/a&gt;标题 3&lt;/h3&gt;&lt;h4 id=&quot;标题-4&quot;&gt;&lt;a href=&quot;#标题-4&quot; class=&quot;headerlink&quot; title=&quot;标题 4&quot;&gt;&lt;/a&gt;标题 4&lt;/h4&gt;&lt;h5 id=&quot;标题-5&quot;&gt;&lt;a href=&quot;#标题-5&quot; class=&quot;headerlink&quot; title=&quot;标题 5&quot;&gt;&lt;/a&gt;标题 5&lt;/h5&gt;&lt;h6 id=&quot;标题-6&quot;&gt;&lt;a href=&quot;#标题-6&quot; class=&quot;headerlink&quot; title=&quot;标题 6&quot;&gt;&lt;/a&gt;标题 6&lt;/h6&gt;&lt;p&gt;嗨，这里是中文测试。&lt;/p&gt;
&lt;p&gt;Hey, there is english test.&lt;/p&gt;</summary>
    
    
    
    <category term="TEST" scheme="https://bibiboom.top/categories/TEST/"/>
    
    
  </entry>
  
  <entry>
    <title>基于 jsDelivr 的简单建站思路</title>
    <link href="https://bibiboom.top/2020/07/26/simple-website-building-ideas-based-on-jsdelivr/"/>
    <id>https://bibiboom.top/2020/07/26/simple-website-building-ideas-based-on-jsdelivr/</id>
    <published>2020-07-25T16:00:00.000Z</published>
    <updated>2020-11-07T17:33:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>暑假期间，心血来潮想要写一个自己的 travel blog，想要用最低成本的方式写一个最稳定的 blog 网站，以下是我制作这个网站的总体思路，仅供参考。</p><h4 id="我使用的服务"><a href="#我使用的服务" class="headerlink" title="我使用的服务"></a>我使用的服务</h4><ul><li>服务器提供商使用 <a href="https://www.linode.com/">Linode</a>，位于美国加州。</li><li>使用 <a href="https://www.cloudflare.com/">Cloudflare</a> 作为全球 cdn 加速。</li><li>将全站备份于 GitHub，并使用 <a href="https://www.jsdelivr.com/">jsDelivr</a> 加速 GitHub 上的静态资源。</li></ul><a id="more"></a><p>这个网站是 <a href="https://an.dog/">an.dog</a>，以下是 logo 和截图。</p><img src="/2020/07/26/simple-website-building-ideas-based-on-jsdelivr/travelDogIconHome.svg" class=""><img src="/2020/07/26/simple-website-building-ideas-based-on-jsdelivr/travelDogHome.png" class=""><h2 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h2><p>jsDelivr 的作用主要用来加速需网络速度较快的静态资源，如图片、视频等等。由于 jsDelivr 在国内有服务器，所以国内的访问速度很快，jsDelivr 的使用参考 <a href="https://www.jsdelivr.com/">官网</a>，简单来说就是通过请求 URL <code>https://cdn.jsdelivr.net/gh/[用户名]/[仓库名]/[文件路径]</code> 来访问 GitHub 里的文件，由于有时候 GitHub 的修改可能导致 jsDelivr 没有及时更新，建议在 GitHub 用 release 的方式进行 cdn 加速，这种方法需要访问 <code>https://cdn.jsdelivr.net/gh/[用户名]/[仓库名]@[版本名]/[文件路径]</code> 来使用 cdn。<a href="https://github.com/CLOXnu/travelblog">an.dog 的 GitHub 链接</a></p><p>整站的文章写在根目录的 <code>content/</code> 目录下，每篇文章带有一个 <code>info.json</code>，用来列举文章的详细信息。后端语言使用 PHP，动态读取 <code>content/</code> 目录下的文件，然后前端 JavaScript 将 Markdown 转为 Html。</p><p>这里使用一个 JavaScript 工具 <a href="https://marked.js.org/">Marked</a> 完成 Markdown 转 Html 的工作。在 Marked 的说明文档中介绍到，可以使用 renderer 将 Markdown 转换过程中遇到指定的内容并转换成需要的格式，这样就可以将文章中引用到的图片转换成 jsDelivr 的地址了（如下图）（那个 baseURL 就是 jsDelivr cdn 的前缀：<code>https://cdn.jsdelivr.net/gh/...</code>）</p><img src="/2020/07/26/simple-website-building-ideas-based-on-jsdelivr/marked.png" class=""><blockquote><p>图片中那个 <code>level === 2 || level === 4</code> 的意思是我将标题等级为 2 和 4 的标题加一个 id，后面可以定位这些标题。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;暑假期间，心血来潮想要写一个自己的 travel blog，想要用最低成本的方式写一个最稳定的 blog 网站，以下是我制作这个网站的总体思路，仅供参考。&lt;/p&gt;
&lt;h4 id=&quot;我使用的服务&quot;&gt;&lt;a href=&quot;#我使用的服务&quot; class=&quot;headerlink&quot; title=&quot;我使用的服务&quot;&gt;&lt;/a&gt;我使用的服务&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;服务器提供商使用 &lt;a href=&quot;https://www.linode.com/&quot;&gt;Linode&lt;/a&gt;，位于美国加州。&lt;/li&gt;
&lt;li&gt;使用 &lt;a href=&quot;https://www.cloudflare.com/&quot;&gt;Cloudflare&lt;/a&gt; 作为全球 cdn 加速。&lt;/li&gt;
&lt;li&gt;将全站备份于 GitHub，并使用 &lt;a href=&quot;https://www.jsdelivr.com/&quot;&gt;jsDelivr&lt;/a&gt; 加速 GitHub 上的静态资源。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Web" scheme="https://bibiboom.top/categories/Web/"/>
    
    
    <category term="author: cloxnu" scheme="https://bibiboom.top/tags/author-cloxnu/"/>
    
    <category term="JavaScript" scheme="https://bibiboom.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>如何在没接触过 macOS 开发的情况下 4 个小时写一个学校爬电费状态栏 App</title>
    <link href="https://bibiboom.top/2019/12/08/energy-charge-in-macos/"/>
    <id>https://bibiboom.top/2019/12/08/energy-charge-in-macos/</id>
    <published>2019-12-07T16:00:00.000Z</published>
    <updated>2020-05-22T16:35:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/CLOXnu/Energy_Charge_in_MacOS">GitHub 链接</a></p><h2 id="2020-05-23-00-35-更新"><a href="#2020-05-23-00-35-更新" class="headerlink" title="2020-05-23 00:35 更新"></a>2020-05-23 00:35 更新</h2><p>连接错误变灰</p><p>低电费变红</p><img src="/2019/12/08/energy-charge-in-macos/charge_low.jpg" class="" title="charge_low"><p>其他寝室</p><img src="/2019/12/08/energy-charge-in-macos/other_room.jpg" class="" title="other_room"><h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>学校寝室里配了台台式，写了大半学期的 iOS，这一切都如此顺利。</p><p>不过就在刚刚，一位大佬朋友突然向我展示了他找到的查寝室电费网址 POST 参数。这不禁让我陷入了思考（因为平常我得经常看着点电费不然没电费了电脑黑屏警告233）。然后我顺便查了下我们寝室的电费，nm只有 1 块 5 了！！！</p><p>开发一个 macOS 的爬电费 App 就这样开始了。</p><p>—- 四个小时前</p><a id="more"></a><h2 id="Hardworking…"><a href="#Hardworking…" class="headerlink" title="Hardworking…"></a>Hardworking…</h2><p>Xcode - File - New - Project…</p><p>然后选择 macOS App，这一切看起来如此自然，然而第一个困扰我的出现了 — url request 如何实现。</p><p>一向喜欢用第三方库的我，果不其然又发现了一个好用的 url request 库，它叫 <code>Alamofire</code>。这个库用来写请求超级超级容易，不过我完全不知道请求完成后得到的 <code>request</code> 应该怎么用，后来找到它的文档这里</p><img src="/2019/12/08/energy-charge-in-macos/Alamofire.png" class="" title="Alamofire"><p>噢，原来我获得的就是这个网址的 JSON 数据，我只需要使用官方的 <code>JSONSerialization</code> 类就行了，于是我就写成了下面这样，把 JSON 转换 <code>NSDictionary</code> 一层层不断获取，成功得到了电费数值，并将它们写到一个类里去，加了一些代理以便其他类能够得到电费变更通知或错误通知。</p><img src="/2019/12/08/energy-charge-in-macos/code.png" class="" title="code"><p>可能你们都看到了，我设定了一个定时器每隔 5 分钟获取一次数据（虽然不知道会不会有电脑睡眠断定时器之类的问题毕竟这是 1.0 版本不想考虑那么多），于是我寻思还需要增加一个手动更新数据的位置，而且查看数据肯定要一个方便的位置，emmmm，就状态栏吧，看那么多应用都在上面应该没啥问题。。。</p><p>于是，第二个难点。。。如何在状态栏显示内容。</p><p>其实了解之后还是很简单，在 Storyboard 加一个菜单列表就行了，然后在一个新的类里把这个菜单设为状态栏菜单。看起来挺简单吧，操作起来也挺简单的。</p><img src="/2019/12/08/energy-charge-in-macos/storyboard.png" class="" title="storyboard"><p>好了，四个小时过去了，这个小插件其实很简单，但自己也学到了不少。</p><h2 id="成型"><a href="#成型" class="headerlink" title="成型"></a>成型</h2><img src="/2019/12/08/energy-charge-in-macos/display.png" class="" title="display">]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/CLOXnu/Energy_Charge_in_MacOS&quot;&gt;GitHub 链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;2020-05-23-00-35-更新&quot;&gt;&lt;a href=&quot;#2020-05-23-00-35-更新&quot; class=&quot;headerlink&quot; title=&quot;2020-05-23 00:35 更新&quot;&gt;&lt;/a&gt;2020-05-23 00:35 更新&lt;/h2&gt;&lt;p&gt;连接错误变灰&lt;/p&gt;


&lt;p&gt;低电费变红&lt;/p&gt;
&lt;img src=&quot;/2019/12/08/energy-charge-in-macos/charge_low.jpg&quot; class=&quot;&quot; title=&quot;charge_low&quot;&gt;

&lt;p&gt;其他寝室&lt;/p&gt;
&lt;img src=&quot;/2019/12/08/energy-charge-in-macos/other_room.jpg&quot; class=&quot;&quot; title=&quot;other_room&quot;&gt;

&lt;h2 id=&quot;缘起&quot;&gt;&lt;a href=&quot;#缘起&quot; class=&quot;headerlink&quot; title=&quot;缘起&quot;&gt;&lt;/a&gt;缘起&lt;/h2&gt;&lt;p&gt;学校寝室里配了台台式，写了大半学期的 iOS，这一切都如此顺利。&lt;/p&gt;
&lt;p&gt;不过就在刚刚，一位大佬朋友突然向我展示了他找到的查寝室电费网址 POST 参数。这不禁让我陷入了思考（因为平常我得经常看着点电费不然没电费了电脑黑屏警告233）。然后我顺便查了下我们寝室的电费，nm只有 1 块 5 了！！！&lt;/p&gt;
&lt;p&gt;开发一个 macOS 的爬电费 App 就这样开始了。&lt;/p&gt;
&lt;p&gt;—- 四个小时前&lt;/p&gt;</summary>
    
    
    
    <category term="macOS" scheme="https://bibiboom.top/categories/macOS/"/>
    
    
    <category term="author: cloxnu" scheme="https://bibiboom.top/tags/author-cloxnu/"/>
    
    <category term="Swift" scheme="https://bibiboom.top/tags/Swift/"/>
    
  </entry>
  
</feed>
